- can = {book: authorize_globally_for('chronos/time_logs', 'book'), update: authorize_globally_for('chronos/time_logs', 'update')}
= form_for time_booking, url: book_chronos_time_log_path(time_log), as: 'time_booking', remote: true, html: {id: "new_time_booking_for_#{time_log.id}", class: 'add-time-booking-form js-chronos-remote js-validate-form js-check-splitting', data: {time_log_id: time_log.id, type: 'add-time-booking', id_for_bulk_edit: time_log.id}} do |f|
  .form-row
    = form_field :start, f, time_booking, disabled: !can[:book], validate_limit: true
    = form_field :stop, f, time_booking, disabled: !can[:book], validate_limit: true
    .form-field
      .label
        = label :time_booking, :round, t(:field_round), title: t('chronos.ui.time_logs.round_hint')
      .input
        = check_box :time_booking, :round, checked: Chronos::DateTimeCalculations.round_default
    = form_field :project, f, time_booking, disabled: !can[:book], required: true
    = form_field :activity, f, time_booking, disabled: !can[:book], required: true
    = form_field :issue, f, time_booking, disabled: !can[:book]
    = form_field :comments, f, time_booking, disabled: !can[:update]
    .form-field
      .input
        = f.submit t('chronos.ui.lists.button_book')
        button type='button' class="js-bulk-edit hidden"
          = t('chronos.ui.lists.button_book_all')
        = link_to t(:button_cancel), '#', class: 'js-hide-inline-form'
