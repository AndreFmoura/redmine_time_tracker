- can = {update: authorize_globally_for('chronos/time_bookings', 'update'), update_time: authorize_globally_for('chronos/time_bookings', 'update_time')}
= form_for time_booking, as: 'time_booking', remote: true, html: {class: 'edit-time-booking-form js-chronos-remote js-validate-form js-check-splitting', data: {time_log_id: time_booking.time_log_id}} do |f|
  .form-row
    = form_field :start, f, time_booking, disabled: !can[:update_time], validate_limit: true
    = form_field :stop, f, time_booking, disabled: !can[:update_time], validate_limit: true
    .form-field
      .label
        = label :time_booking, :round
      .input
        = check_box :time_booking, :round, checked: Chronos::DateTimeCalculations.round_default
    = form_field :project, f, time_booking, disabled: !can[:update], required: true
    = form_field :activity, f, time_booking, disabled: !can[:update], required: true
    = form_field :issue, f, time_booking, disabled: !can[:update]
    = form_field :comments, f, time_booking, disabled: !can[:update]
    .form-field
      .input
        = f.submit t(:button_update)
        = link_to t(:button_cancel), '#', class: 'js-hide-inline-form'
