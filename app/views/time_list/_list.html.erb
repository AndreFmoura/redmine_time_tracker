<%= form_tag({}) do -%>
    <%= hidden_field_tag 'back_url', url_for(params), :id => nil %>
    <div class="autoscroll">
      <table class="list">
        <thead>
        <tr>
          <!-- TODO check if following JS function works with my entries instead of issues as well -->
          <th class="checkbox hide-when-print"><%= link_to image_tag('toggle_check.png'), {}, :onclick => 'toggleIssuesSelection(Element.up(this, "form")); return false;',
                                                           :title => "#{l(:button_check_all)}/#{l(:button_uncheck_all)}" %>
          </th>
          <%= sort_header_tag('id', :caption => '#', :default_order => 'desc') %>
          <% query.columns.each do |column| %>
              <%= column_header(column) %>
          <% end %>
        </tr>
        </thead>
        <% previous_group = false %>
        <tbody>
        <% bookings.each do |entry| -%>
            <% if @query.grouped? && (group = @query.group_by_column.value(entry)) != previous_group %>
                <% reset_cycle %>
                <tr class="group open">
                  <td colspan="<%= query.columns.size + 2 %>">
                    <span class="expander" onclick="toggleRowGroup(this);">&nbsp;</span>
                    <%= group.blank? ? 'None' : column_content(@query.group_by_column, entry) %>
                    <span class="count">(<%= @booking_count_by_group[group] %>)</span>
                    <!-- TODO rewrite function-call -->
                    <%= link_to_function("#{l(:button_collapse_all)}/#{l(:button_expand_all)}", "toggleAllRowGroups(this)", :class => 'toggle-all') %>
                  </td>
                </tr>
                <% previous_group = group %>
            <% end %>
            <!-- look at issues\_list! the following line contains a method to add css-classes dynamically there.. -->
            <tr id="entry-<%= entry.id %>" class="hascontextmenu entry <%= cycle('odd', 'even') %>">
              <td class="checkbox hide-when-print"><%= check_box_tag("ids[]", entry.id, false, :id => nil) %></td>
              <!-- following line should contain a link to the time_bookings! again, look at the issues\_list -->
              <td class="id"><%= entry.id %></td>
              <%= raw query.columns.map { |column| "<td class=\"#{column.css_classes}\">#{column_content(column, entry)}</td>" }.join %>
            </tr>
        <% end -%>
        </tbody>
      </table>
    </div>
<% end -%>
